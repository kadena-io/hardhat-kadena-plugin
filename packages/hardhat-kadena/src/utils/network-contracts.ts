/* *************************************************************************** */
/* Network Constants */

import { ethers } from 'ethers';

// TODO: build the contract at build time and import it here
export const CHAIN_ID_BYTE_CODE = '0x5f545f526004601cf3';
// the main branch uses the static address so I commented out the dynamic one
export const CHAIN_ID_ADDRESS = ethers.dataSlice(
  ethers.id('/Chainweb/Chain/Id/'),
  12,
);
export const CHAIN_ID_ABI = [
  'function chainwebChainId() view returns (uint32)',
];

// FIXME this address is at risk of conflicting with future Ethereum upgrades
// Instead uses something like address(keccak256("/Chainweb/KIP-34/VERIFY/SVP/"))
export const VERIFY_ADDRESS = ethers.dataSlice(
  ethers.id('/Chainweb/KIP-34/VERIFY/SVP/'),
  12,
);
// TODO: build the contract at build time and import it here
export const VERIFY_BYTE_CODE =
  '0x60203610601f5736601f1901806020608037806080205f3503601f576080f35b5f80fd';
export const VERIFY_ABI = [
  'function verify(bytes memory proof) public pure returns (bytes memory data)',
];

// The create2 Deterministic Deployment Proxy (factory). This is a copy of https://github.com/Arachnid/deterministic-deployment-proxy
export const CREATE2_PROXY_ADDRESS = ethers.dataSlice(
  ethers.id('/Chainweb/Create2/Proxy/'),
  12,
);

// TODO: copy bytecode automatically from the build process? May not be necessary, as the code shouldn't cchange
// Generated from: packages/hardhat-kadena/contracts/deterministic-deployment-proxy.yul
// Artifact: packages/hardhat-kadena/artifacts/contracts/deterministic-deployment-proxy.yul/Proxy/bytecode.txt
// Being copied here for now
const create2SolidityBytecode =
  '0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630c28a6081461004657806381176c20146100765780639c4ae2d0146100a6575b600080fd5b610060600480360381019061005b9190610202565b6100d6565b60405161006d919061024a565b60405180910390f35b610090600480360381019061008b91906103e1565b6100e9565b60405161009d919061044c565b60405180910390f35b6100c060048036038101906100bb91906103e1565b610133565b6040516100cd919061044c565b60405180910390f35b600080823b905060008111915050919050565b60008060ff60f81b3084868051906020012060405160200161010e9493929190610548565b6040516020818303038152906040528051906020012090508060001c91505092915050565b600080828451602086016000f59050803b61014d57600080fd5b7fb03c53b28e78a88e31607a27e1fa48234dce28d5d9d9ec7b295aeb02e674a1e1818460405161017e9291906105a5565b60405180910390a18091505092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101cf826101a4565b9050919050565b6101df816101c4565b81146101ea57600080fd5b50565b6000813590506101fc816101d6565b92915050565b6000602082840312156102185761021761019a565b5b6000610226848285016101ed565b91505092915050565b60008115159050919050565b6102448161022f565b82525050565b600060208201905061025f600083018461023b565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102b88261026f565b810181811067ffffffffffffffff821117156102d7576102d6610280565b5b80604052505050565b60006102ea610190565b90506102f682826102af565b919050565b600067ffffffffffffffff82111561031657610315610280565b5b61031f8261026f565b9050602081019050919050565b82818337600083830152505050565b600061034e610349846102fb565b6102e0565b90508281526020810184848401111561036a5761036961026a565b5b61037584828561032c565b509392505050565b600082601f83011261039257610391610265565b5b81356103a284826020860161033b565b91505092915050565b6000819050919050565b6103be816103ab565b81146103c957600080fd5b50565b6000813590506103db816103b5565b92915050565b600080604083850312156103f8576103f761019a565b5b600083013567ffffffffffffffff8111156104165761041561019f565b5b6104228582860161037d565b9250506020610433858286016103cc565b9150509250929050565b610446816101c4565b82525050565b6000602082019050610461600083018461043d565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6104ae6104a982610467565b610493565b82525050565b60008160601b9050919050565b60006104cc826104b4565b9050919050565b60006104de826104c1565b9050919050565b6104f66104f1826101c4565b6104d3565b82525050565b6000819050919050565b610517610512826103ab565b6104fc565b82525050565b6000819050919050565b6000819050919050565b61054261053d8261051d565b610527565b82525050565b6000610554828761049d565b60018201915061056482866104e5565b6014820191506105748285610506565b6020820191506105848284610531565b60208201915081905095945050505050565b61059f816103ab565b82525050565b60006040820190506105ba600083018561043d565b6105c76020830184610596565b939250505056fea2646970667358221220a9f0226f33b7de0916c1e75e3518b293e3c448dce9164578e03c8f5b5dbcc07664736f6c634300081c0033';

export const create2YulBytecode =
  '0x602180600a5f395ff3fe6020360360205f375f35602036035f34f58015601d575f526014600cf35b5f80fd';

export const CREATE2_PROXY_BYTE_CODE = create2SolidityBytecode;
export const CREATE2_PROXY_ABI = [
  'function deploy(bytes32 salt, bytes memory initCode) returns (address)',
];
